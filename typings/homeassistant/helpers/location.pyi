"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterable
from homeassistant.core import HomeAssistant, State

"""Location helpers for Home Assistant."""
_LOGGER = ...

def has_location(state: State) -> bool:
    """Test if state contains a valid location.

    Async friendly.
    """
    ...

def closest(latitude: float, longitude: float, states: Iterable[State]) -> State | None:
    """Return closest state to point.

    Async friendly.
    """
    ...

def find_coordinates(
    hass: HomeAssistant, name: str, recursion_history: list | None = ...
) -> str | None:
    """Try to resolve the a location from a supplied name or entity_id.

    Will recursively resolve an entity if pointed to by the state of the supplied
    entity.

    Returns coordinates in the form of '90.000,180.000', an address or
    the state of the last resolved entity.
    """
    ...

def resolve_zone(hass: HomeAssistant, zone_name: str) -> str | None:
    """Get a lat/long from a zones friendly_name.

    None is returned if no zone is found by that friendly_name.
    """
    ...
