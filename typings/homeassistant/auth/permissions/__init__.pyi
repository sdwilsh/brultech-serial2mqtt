"""
This type stub file was generated by pyright.
"""

from __future__ import annotations

from collections.abc import Callable
from typing import Any

import voluptuous as vol

from .const import CAT_ENTITIES
from .entities import ENTITY_POLICY_SCHEMA, compile_entities
from .merge import merge_policies
from .models import PermissionLookup
from .types import PolicyType
from .util import test_all

"""Permissions for Home Assistant."""
POLICY_SCHEMA = ...

class AbstractPermissions:
    """Default permissions class."""

    _cached_entity_func: Callable[[str, str], bool] | None = ...
    def access_all_entities(self, key: str) -> bool:
        """Check if we have a certain access to all entities."""
        ...
    def check_entity(self, entity_id: str, key: str) -> bool:
        """Check if we can access entity."""
        ...

class PolicyPermissions(AbstractPermissions):
    """Handle permissions."""

    def __init__(self, policy: PolicyType, perm_lookup: PermissionLookup) -> None:
        """Initialize the permission class."""
        ...
    def access_all_entities(self, key: str) -> bool:
        """Check if we have a certain access to all entities."""
        ...
    def __eq__(self, other: Any) -> bool:
        """Equals check."""
        ...

class _OwnerPermissions(AbstractPermissions):
    """Owner permissions."""

    def access_all_entities(self, key: str) -> bool:
        """Check if we have a certain access to all entities."""
        ...

OwnerPermissions = ...
