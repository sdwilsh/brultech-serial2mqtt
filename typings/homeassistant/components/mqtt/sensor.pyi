"""
This type stub file was generated by pyright.
"""

import voluptuous as vol
from collections.abc import Callable
from datetime import datetime
from homeassistant.components.sensor import RestoreSensor
from homeassistant.config_entries import ConfigEntry
from homeassistant.core import CALLBACK_TYPE, HomeAssistant
from homeassistant.helpers.entity_platform import AddEntitiesCallback
from .mixins import MqttEntity
from .models import PayloadSentinel, ReceivePayloadType

"""Support for MQTT sensors."""
_LOGGER = ...
CONF_EXPIRE_AFTER = ...
CONF_LAST_RESET_TOPIC = ...
CONF_LAST_RESET_VALUE_TEMPLATE = ...
CONF_SUGGESTED_DISPLAY_PRECISION = ...
MQTT_SENSOR_ATTRIBUTES_BLOCKED = ...
DEFAULT_NAME = ...
DEFAULT_FORCE_UPDATE = ...
_PLATFORM_SCHEMA_BASE = ...
PLATFORM_SCHEMA_MODERN = ...
DISCOVERY_SCHEMA = ...

async def async_setup_entry(
    hass: HomeAssistant,
    config_entry: ConfigEntry,
    async_add_entities: AddEntitiesCallback,
) -> None:
    """Set up MQTT sensor through YAML and through MQTT discovery."""
    ...

class MqttSensor(MqttEntity, RestoreSensor):
    """Representation of a sensor that can be updated using MQTT."""

    _default_name = ...
    _entity_id_format = ...
    _attr_last_reset: datetime | None = ...
    _attributes_extra_blocked = ...
    _expiration_trigger: CALLBACK_TYPE | None = ...
    _expire_after: int | None
    _expired: bool | None
    _template: Callable[[ReceivePayloadType, PayloadSentinel], ReceivePayloadType]
    _last_reset_template: Callable[[ReceivePayloadType], ReceivePayloadType]
    async def mqtt_async_added_to_hass(self) -> None:
        """Restore state for entities with expire_after set."""
        ...

    async def async_will_remove_from_hass(self) -> None:
        """Remove exprire triggers."""
        ...

    @staticmethod
    def config_schema() -> vol.Schema:
        """Return the config schema."""
        ...

    @property
    def available(self) -> bool:
        """Return true if the device is available and value has not expired."""
        ...
