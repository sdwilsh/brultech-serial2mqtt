"""
This type stub file was generated by pyright.
"""

from collections.abc import Awaitable, Callable
from http import HTTPStatus
from typing import Any
from aiohttp import web
from aiohttp.typedefs import LooseHeaders
from homeassistant.core import Context, HomeAssistant

"""Support for views."""
_LOGGER = ...

class HomeAssistantView:
    """Base view for all views."""

    url: str | None = ...
    extra_urls: list[str] = ...
    requires_auth = ...
    cors_allowed = ...
    @staticmethod
    def context(request: web.Request) -> Context:
        """Generate a context from a request."""
        ...

    @staticmethod
    def json(
        result: Any,
        status_code: HTTPStatus | int = ...,
        headers: LooseHeaders | None = ...,
    ) -> web.Response:
        """Return a JSON response."""
        ...

    def json_message(
        self,
        message: str,
        status_code: HTTPStatus | int = ...,
        message_code: str | None = ...,
        headers: LooseHeaders | None = ...,
    ) -> web.Response:
        """Return a JSON message response."""
        ...

    def register(
        self, hass: HomeAssistant, app: web.Application, router: web.UrlDispatcher
    ) -> None:
        """Register the view with a router."""
        ...

def request_handler_factory(
    hass: HomeAssistant, view: HomeAssistantView, handler: Callable
) -> Callable[[web.Request], Awaitable[web.StreamResponse]]:
    """Wrap the handler classes."""
    ...
